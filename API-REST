from flask import Flask, jsonify, make_response, request
import json


app = Flask(__name__)

data = []
data1 = {}

# -------------------------ERRORES------------------------#

@app.errorhandler(400)  # ERROR DE SINTAXIS
def bad_request(error):
    return make_response(jsonify({'error': 'Bad request....!'}), 400)


@app.errorhandler(401)  # NO AUTORIZADO
def unauthorized(error):
    return make_response(jsonify({'error': 'Unauthorized....!'}), 401)


@app.errorhandler(403)  # Prohibido
def forbidden(error):
    return make_response(jsonify({'error': 'Forbidden....!'}), 403)


@app.errorhandler(404)  # ERROR NO ENCONTRADO
def not_found(error):
    return make_response(jsonify({'error': 'Not found....!'}), 404)


@app.errorhandler(500)  # Error en el servidor interno
def internal_server_error(error):
    return make_response(jsonify({'error': 'Internal Server Error....!'}), 500)


@app.route('/estudiantes', methods=['GET'])
def Estudiantes():
    datos = {
        "estudiante": {
            "apellidos": "Alfaro vargas",
            "celular": 01735100,
            "email": "guivaral@gmaio.com,
            "id": 305120653,
            "nivel": "master",
            "nombre": "guillermo"
        },
        "status": 200,
        "status_message": "OK"
    }
    return jsonify({"datos": datos})


@app.route('/datos', methods=['POST'])
def Datos():

    data.clear()
    request_data = request.get_json()
    data.append(request_data)

    valores = [valor for dato in data for valor in dato.values()]
    n_valores = len(valores)

    datos = {
        "resultado": {
            "datos": {
                "nValores": n_valores
            },
            "status": 201,
            "status_message": "Data Created"
        }
    }
    return jsonify({'info': datos}), 201


@app.route('/estadisticas', methods=['GET'])
def Estadisticas():

    valores = [valor for dato in data for valor in dato.values()]
    mayor = max(valores)
    menor = min(valores)
    suma = sum(valores)
    n_valores = len(valores)
    promedio = suma / n_valores

    resultado = {
        "datos": data,
        "estadisticas": {
            "mayor": mayor,
            "menor": menor,
            "nValores": n_valores,
            "promedio": promedio,
            "suma": suma
        },
        "status": 200,
        "status_message": "OK"
    }

    return jsonify({"resultado": resultado})

@app.route('/elevar', methods=['GET'])
def Elevar():
    datos_elevados = {}

    for dato in data:
        for clave, valor in dato.items():
            datos_elevados[clave] = valor * valor

    resultado = {

        "d_elevedaos":  datos_elevados,
        "d_originales": data,
        "status": 200,
        "status_message": "OK"
    }

    return jsonify({"resultado": resultado})

@app.route('/elevar/<int:num>', methods=['GET'])
def Elevar_num(num):
    datos_elevados = {}

    for dato in data:
        for clave, valor in dato.items():
            datos_elevados[clave] = valor ** num
    resultado = {

        "d_elevedaos":  datos_elevados,
        "d_originales": data,
        "status": 200,
        "status_message": "OK"
    }

    return jsonify({"resultado": resultado})

@app.route('/entero/<int:num>', methods=['GET'])
def Enetro_num(num):

    if num == 1:
        capacidad = "0 a 255"
    elif num == 2:
        capacidad = "-32,768 a 32,767"
    elif num == 3:
        capacidad = "-8,388,608 a 8,388,607"
    elif num == 4:
        capacidad = "-2,147,483,648 a 2,147,483,647"


    resultado = {
        "resultado": {
            "con_signo": capacidad,
            "sin_signo": f"0 a {2 ** (num * 8) - 1}",
            "n_bits": num * 8
        },
        "status": 200,
        "status_message": "OK"
    }

    return jsonify({"resultado": resultado})


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
